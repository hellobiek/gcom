package crypto

import (
	"testing"
	"encoding/hex"
	. "github.com/smartystreets/goconvey/convey"
)

func TestEncryptBlowfish(t *testing.T) {
	Convey("测试Blowfish加密的结果", t, func() {
		deviceInfo := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040100000000ae47e940d7a3bc400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003830334634313035313032450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

		encodeDeviceInfo, _ := hex.DecodeString(deviceInfo)
		result := Blowfish(encodeDeviceInfo)
		strResult := hex.EncodeToString(result)

		So(strResult, ShouldEqual, "749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357ba1c72535776612dedaac42b21bbef99749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae277003574c2786e1795baa8f8ad2002702581c47749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357749933ae27700357")
	})
}

func TestEncryptMd5Sum(t *testing.T) {
	Convey("测试文件Hash的结果", t, func() {
		result, err := EncryptMd5Sum("/Users/hellobiek/WorkSpace/GoglandProjects/src/data/report/gpcw19960630.zip")
		So(err, ShouldBeNil, nil)
		So(result, ShouldEqual, "18023e9f84565323874e8e1dbdfb2adb")
	})
}

func TestEncryptMd5Hex(t *testing.T) {
	Convey("测试普通字符串加密的结果", t, func() {
		result := EncryptMd5Hex([]byte("/Users/hellobiek/WorkSpace/GoglandProjects/src/data/report/gpcw19960630.zip"))
		So(result, ShouldEqual, "f218da9637ce006bd6fb06213346bf97")
	})

}
